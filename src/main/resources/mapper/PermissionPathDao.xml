<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.bridge.dao.PermissionPathDao">
  <resultMap id="BaseResultMap" type="com.api.bridge.dao.domain.PermissionPath">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="path_type" jdbcType="INTEGER" property="pathType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, path_type, create_time, edit_time, creator, editor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission_path
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectIdByProjectId" resultType="java.lang.Long">
        select id
        from permission_path
        where project_id = #{projectId}
  </select>

  <select id="selectProjectIdByUserIdAndPathType" resultType="java.lang.Long">
    select t1.project_id from permission_path t1
    where t1.id in (select t2.permission_id from user_permission t2 where user_id = #{userId} )
      and t1.path_type=#{pathType}
  </select>

  <select id="selectIdByProjectIdAndType" resultType="java.lang.Long">
    select id
    from permission_path
    where project_id = #{projectId} and
      path_type in
    <foreach collection="permissionTypes" separator="," item="item" open="(" close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectByProjectId" resultType="com.api.bridge.dao.domain.PermissionPath">
    select
    <include refid="Base_Column_List" />
    from permission_path
    where project_id = #{projectId}

  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from permission_path
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.api.bridge.dao.domain.PermissionPath" useGeneratedKeys="true">
    insert into permission_path (project_id, path_type, create_time, 
      edit_time, creator, editor)
    values (#{projectId,jdbcType=BIGINT}, #{pathType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.api.bridge.dao.domain.PermissionPath" useGeneratedKeys="true">
    insert into permission_path
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="pathType != null">
        path_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="editor != null">
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="pathType != null">
        #{pathType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="recTime != null">
        #{recTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert">
    INSERT INTO permission_path(project_id, path_type, create_time,
    edit_time, creator, editor) VALUES
    <foreach collection="list" separator="," item="item">
      (#{item.projectId,jdbcType=BIGINT}, #{item.pathType,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP},
      #{item.editTime,jdbcType=TIMESTAMP}, #{item.creator,jdbcType=VARCHAR}, #{item.editor,jdbcType=VARCHAR})
    </foreach>

  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.api.bridge.dao.domain.PermissionPath">
    update permission_path
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="pathType != null">
        path_type = #{pathType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.api.bridge.dao.domain.PermissionPath">
    update permission_path
    set project_id = #{projectId,jdbcType=BIGINT},
      path_type = #{pathType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>