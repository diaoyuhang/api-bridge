<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.bridge.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.api.bridge.dao.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, email,password, create_time, edit_time, creator, editor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectCountByEmail" resultType="java.lang.Integer">
        select count(1)
        from user
        where email=#{email}

    </select>
  <select id="selectByEmailAndPassword" resultType="com.api.bridge.dao.domain.User">
    select
    <include refid="Base_Column_List" />
        from user
    where email=#{email} and password = #{password}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.api.bridge.dao.domain.User" useGeneratedKeys="true">
    insert into user (`name`, email,password, create_time,
      edit_time, creator, editor
      )
    values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{editTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.api.bridge.dao.domain.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>