<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.bridge.dao.TagGroupDao">
  <resultMap id="BaseResultMap" type="com.api.bridge.dao.domain.TagGroup">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, `name`, create_time, edit_time, creator, editor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tag_group
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByProjectId" resultType="com.api.bridge.dao.domain.TagGroup">
    select id,name
        from tag_group
    where project_id = #{projectId}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tag_group
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.api.bridge.dao.domain.TagGroup" useGeneratedKeys="true">
    insert into tag_group (project_id, `name`, create_time, 
      edit_time, creator, editor
      )
    values (#{projectId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.api.bridge.dao.domain.TagGroup" useGeneratedKeys="true">
    insert into tag_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="editor != null">
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.api.bridge.dao.domain.TagGroup">
    update tag_group
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.api.bridge.dao.domain.TagGroup">
    update tag_group
    set project_id = #{projectId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>